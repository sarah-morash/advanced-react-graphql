{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/smorash/Develop/Personal/smorefits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/smorash/Develop/Personal/smorefits/frontend/components/SingleProduct.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      name\\n      price\\n      description\\n      id\\n      photo {\\n        altText\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-auto-columns: 1fr;\\n  grid-auto-flow: column;\\n  min-height: 800px;\\n  max-width: var(--maxWidth);\\n  img {\\n    width: 100%;\\n    height: 100%;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport styled from 'styled-components';\nimport DisplayError from './ErrorMessage';\nvar ProductStyles = styled.div(_templateObject());\n_c = ProductStyles;\nvar SINGLE_ITEM_QUERY = gql(_templateObject2());\n\nvar SingleProduct = function SingleProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, _this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, _this);\n  }\n\n  var Product = data.Product;\n  return /*#__PURE__*/_jsxDEV(ProductStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sick Fits | \", Product.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Product.photo.image.publicUrlTransformed,\n      alt: Product.photo.altText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.Product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SingleProduct, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = SingleProduct;\nexport default SingleProduct;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductStyles\");\n$RefreshReg$(_c2, \"SingleProduct\");","map":{"version":3,"sources":["/Users/smorash/Develop/Personal/smorefits/frontend/components/SingleProduct.js"],"names":["useQuery","gql","Head","styled","DisplayError","ProductStyles","div","SINGLE_ITEM_QUERY","SingleProduct","id","variables","data","loading","error","Product","name","photo","image","publicUrlTransformed","altText","description"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,aAAa,GAAGF,MAAM,CAACG,GAAV,mBAAnB;KAAMD,a;AAYN,IAAME,iBAAiB,GAAGN,GAAH,oBAAvB;;AAiBA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,OAAY;AAAA;;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,kBACCT,QAAQ,CAACO,iBAAD,EAAoB;AAC3DG,IAAAA,SAAS,EAAE;AACTD,MAAAA,EAAE,EAAFA;AADS;AADgD,GAApB,CADT;AAAA,MACxBE,IADwB,aACxBA,IADwB;AAAA,MAClBC,OADkB,aAClBA,OADkB;AAAA,MACTC,KADS,aACTA,KADS;;AAOhC,MAAID,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,wBAAO,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAb+B,MAexBC,OAfwB,GAeZH,IAfY,CAexBG,OAfwB;AAiBhC,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,mCAAoBA,OAAO,CAACC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE;AACE,MAAA,GAAG,EAAED,OAAO,CAACE,KAAR,CAAcC,KAAd,CAAoBC,oBAD3B;AAEE,MAAA,GAAG,EAAEJ,OAAO,CAACE,KAAR,CAAcG;AAFrB;AAAA;AAAA;AAAA;AAAA,aAJF,eAQE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,kBAAKR,IAAI,CAACG,OAAL,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA,kBAAID,OAAO,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CAhCD;;GAAMZ,a;UAC6BR,Q;;;MAD7BQ,a;AAkCN,eAAeA,aAAf","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport styled from 'styled-components';\nimport DisplayError from './ErrorMessage';\n\nconst ProductStyles = styled.div`\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  min-height: 800px;\n  max-width: var(--maxWidth);\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      name\n      price\n      description\n      id\n      photo {\n        altText\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nconst SingleProduct = ({ id }) => {\n  const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id,\n    },\n  });\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <DisplayError error={error} />;\n  }\n\n  const { Product } = data;\n\n  return (\n    <ProductStyles>\n      <Head>\n        <title>Sick Fits | {Product.name}</title>\n      </Head>\n      <img\n        src={Product.photo.image.publicUrlTransformed}\n        alt={Product.photo.altText}\n      />\n      <div className=\"details\">\n        <h2>{data.Product.name}</h2>\n        <p>{Product.description}</p>\n      </div>\n    </ProductStyles>\n  );\n};\n\nexport default SingleProduct;\n"]},"metadata":{},"sourceType":"module"}