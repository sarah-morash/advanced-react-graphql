{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/smorash/Develop/Personal/smorefits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/smorash/Develop/Personal/smorefits/frontend/components/Products.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_PRODUCTS_QUERY {\\n    allProducts {\\n      id\\n      name\\n      price\\n      description\\n      photo {\\n        id\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Product from './Product';\nexport var ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductsListStyles = styled.div.withConfig({\n  displayName: \"Products__ProductsListStyles\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;\"]);\n_c = ProductsListStyles;\n\nvar Products = function Products(_ref) {\n  _s();\n\n  var page = _ref.page;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, _this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ProductsListStyles, {\n    children: data.allProducts.map(function (product) {\n      return /*#__PURE__*/_jsxDEV(Product, {\n        product: product,\n        children: product.name\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Products;\nexport default Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductsListStyles\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["/Users/smorash/Develop/Personal/smorefits/frontend/components/Products.js"],"names":["useQuery","gql","styled","Product","ALL_PRODUCTS_QUERY","ProductsListStyles","div","Products","page","data","error","loading","message","allProducts","map","product","name","id"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,IAAMC,kBAAkB,GAAGH,GAAH,mBAAxB;AAiBP,IAAMI,kBAAkB,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,iEAAxB;KAAMD,kB;;AAMN,IAAME,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACIR,QAAQ,CAACI,kBAAD,CADZ;AAAA,MACrBK,IADqB,aACrBA,IADqB;AAAA,MACfC,KADe,aACfA,KADe;AAAA,MACRC,OADQ,aACRA,OADQ;;AAG7B,MAAIA,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,MAAID,KAAJ,EAAW;AACT,wBAAO;AAAA,gBAAIA,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,sBACE,QAAC,kBAAD;AAAA,cACGH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,OAAD;AAAA,0BACpB,QAAC,OAAD;AAA0B,QAAA,OAAO,EAAEA,OAAnC;AAAA,kBACGA,OAAO,CAACC;AADX,SAAcD,OAAO,CAACE,EAAtB;AAAA;AAAA;AAAA;AAAA,eADoB;AAAA,KAArB;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CApBD;;GAAMV,Q;UAC6BP,Q;;;MAD7BO,Q;AAqBN,eAAeA,QAAf","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Product from './Product';\n\nexport const ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY {\n    allProducts {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nconst ProductsListStyles = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n`;\n\nconst Products = ({ page }) => {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY);\n\n  if (loading) {\n    return <p>LOADING...</p>;\n  }\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <ProductsListStyles>\n      {data.allProducts.map((product) => (\n        <Product key={product.id} product={product}>\n          {product.name}\n        </Product>\n      ))}\n    </ProductsListStyles>\n  );\n};\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}