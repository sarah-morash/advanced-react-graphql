{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/smorash/Develop/Personal/smorefits/frontend/components/Products.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nconst ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY {\n    allProducts {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nconst ProductsListStyles = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n`;\n\nconst Products = () => {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ProductsListStyles, {\n    children: data.allProducts.map(product => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: product.name\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Products;","map":{"version":3,"sources":["/Users/smorash/Develop/Personal/smorefits/frontend/components/Products.js"],"names":["useQuery","gql","styled","ALL_PRODUCTS_QUERY","ProductsListStyles","div","Products","data","error","loading","message","allProducts","map","product","name","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,kBAAkB,GAAGF,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,MAAMG,kBAAkB,GAAGF,MAAM,CAACG,GAAI;AACtC;AACA;AACA;AACA,CAJA;;AAMA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BT,QAAQ,CAACG,kBAAD,CAAzC;;AAEA,MAAIM,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAID,KAAJ,EAAW;AACT,wBAAO;AAAA,gBAAIA,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,kBAAD;AAAA,cACGH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAsBC,OAAD,iBACpB;AAAA,gBAAqBA,OAAO,CAACC;AAA7B,OAAQD,OAAO,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlBD;;AAmBA,eAAeT,QAAf","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\n\nconst ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY {\n    allProducts {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nconst ProductsListStyles = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n`;\n\nconst Products = () => {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY);\n\n  if (loading) {\n    return <p>LOADING...</p>;\n  }\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <ProductsListStyles>\n      {data.allProducts.map((product) => (\n        <p key={product.id}>{product.name}</p>\n      ))}\n    </ProductsListStyles>\n  );\n};\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}