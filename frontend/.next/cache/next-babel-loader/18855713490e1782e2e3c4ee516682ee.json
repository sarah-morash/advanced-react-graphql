{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/smorash/Develop/Personal/smorefits/frontend/components/Checkout.js\";\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { Router, useRouter } from 'next/dist/client/router';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport useCart from '../lib';\nimport SickButton from './styles/SickButton';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nconst CheckoutForm = () => {\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const router = useRouter();\n  const {\n    closeCart\n  } = useCart();\n  const [checkout, {\n    error: graphQLError\n  }] = useMutation(CREATE_ORDER_MUTATION);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true); // Start page transition\n\n    nProgress.start(); // Create payment method via Stripe\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod); // Handle errors, stop checkout\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return;\n    } // Send token to keystone via custom mutation\n\n\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    });\n    console.log(order); // change the path to view the orders\n\n    router.push({\n      pathname: '/order',\n      query: {\n        id: order.data.checkout.id\n      }\n    }); // close the cart\n\n    closeCart();\n    setLoading(false);\n    nProgress.done();\n  };\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: \"error.message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: \"graphQLError.message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\nconst Checkout = () => /*#__PURE__*/_jsxDEV(Elements, {\n  stripe: stripeLib,\n  children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 110,\n  columnNumber: 3\n}, this);\n\nexport { Checkout };","map":{"version":3,"sources":["/Users/smorash/Develop/Personal/smorefits/frontend/components/Checkout.js"],"names":["useState","styled","nProgress","gql","useMutation","Router","useRouter","loadStripe","Elements","CardElement","useStripe","useElements","useCart","SickButton","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","router","closeCart","checkout","graphQLError","handleSubmit","e","preventDefault","start","paymentMethod","createPaymentMethod","type","card","getElement","console","log","done","order","variables","token","id","push","pathname","query","data","fontSize","Checkout"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport nProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport { Router, useRouter } from 'next/dist/client/router';\n\nimport { loadStripe } from '@stripe/stripe-js';\nimport {\n  Elements,\n  CardElement,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\n\nimport useCart from '../lib';\nimport SickButton from './styles/SickButton';\n\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nconst CheckoutForm = () => {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const router = useRouter();\n  const { closeCart } = useCart();\n  const [checkout, { error: graphQLError }] = useMutation(\n    CREATE_ORDER_MUTATION\n  );\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    // Start page transition\n    nProgress.start();\n\n    // Create payment method via Stripe\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n    });\n\n    console.log(paymentMethod);\n\n    // Handle errors, stop checkout\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return;\n    }\n\n    // Send token to keystone via custom mutation\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id,\n      },\n    });\n\n    console.log(order);\n\n    // change the path to view the orders\n    router.push({\n      pathname: '/order',\n      query: { id: order.data.checkout.id },\n    });\n\n    // close the cart\n    closeCart();\n\n    setLoading(false);\n    nProgress.done();\n  };\n\n  return (\n    <CheckoutFormStyles onSubmit={handleSubmit}>\n      {error && <p style={{ fontSize: 12 }}>error.message</p>}\n      {graphQLError && <p style={{ fontSize: 12 }}>graphQLError.message</p>}\n      <CardElement />\n      <SickButton>Check Out Now</SickButton>\n    </CheckoutFormStyles>\n  );\n};\n\nconst Checkout = () => (\n  <Elements stripe={stripeLib}>\n    <CheckoutForm />\n  </Elements>\n);\n\nexport { Checkout };\n"]},"metadata":{},"sourceType":"module"}