{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/smorash/Develop/Personal/smorefits/frontend/components/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport gql from 'graphql-tag';\nimport { useLazyQuery } from '@apollo/client';\nimport { useCombobox, resetIdCounter } from 'downshift';\nimport debounce from 'lodash.debounce';\nimport { SearchStyles, DropDown, DropDownItem } from './styles/DropDown';\nconst SEARCH_PRODUCTS_QUERY = gql`\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n    searchTerms: allProducts(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nconst Search = () => {\n  const [findItems, {\n    data,\n    loading,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  });\n  const items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const {\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps\n  } = useCombobox({\n    items: [],\n\n    onInputValueChange() {\n      console.log('Input Changed!');\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n\n    onSelectedItemChange() {\n      console.log('Selected Item Changed!');\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an item',\n        id: 'search',\n        className: 'loading'\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"HEY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/smorash/Develop/Personal/smorefits/frontend/components/Search.js"],"names":["gql","useLazyQuery","useCombobox","resetIdCounter","debounce","SearchStyles","DropDown","DropDownItem","SEARCH_PRODUCTS_QUERY","Search","findItems","data","loading","error","fetchPolicy","items","searchTerms","findItemsButChill","inputValue","getMenuProps","getInputProps","getComboboxProps","onInputValueChange","console","log","variables","searchTerm","onSelectedItemChange","type","placeholder","id","className"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,WAA5C;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,YAAjC,QAAqD,mBAArD;AAEA,MAAMC,qBAAqB,GAAGR,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;;AAqBA,MAAMS,MAAM,GAAG,MAAM;AACnB,QAAM,CACJC,SADI,EAEJ;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAFI,IAGFZ,YAAY,CAACO,qBAAD,EAAwB;AAAEM,IAAAA,WAAW,EAAE;AAAf,GAAxB,CAHhB;AAIA,QAAMC,KAAK,GAAG,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEK,WAAN,KAAqB,EAAnC;AACA,QAAMC,iBAAiB,GAAGb,QAAQ,CAACM,SAAD,EAAY,GAAZ,CAAlC;AACAP,EAAAA,cAAc;AACd,QAAM;AACJe,IAAAA,UADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA;AAJI,MAKFnB,WAAW,CAAC;AACda,IAAAA,KAAK,EAAE,EADO;;AAEdO,IAAAA,kBAAkB,GAAG;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAP,MAAAA,iBAAiB,CAAC;AAChBQ,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAER;AADH;AADK,OAAD,CAAjB;AAKD,KATa;;AAUdS,IAAAA,oBAAoB,GAAG;AACrBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;;AAZa,GAAD,CALf;AAoBA,sBACE,QAAC,YAAD;AAAA,4BACE,+CAASH,gBAAgB,EAAzB;AAAA,6BACE,mCACMD,aAAa,CAAC;AAChBQ,QAAAA,IAAI,EAAE,QADU;AAEhBC,QAAAA,WAAW,EAAE,oBAFG;AAGhBC,QAAAA,EAAE,EAAE,QAHY;AAIhBC,QAAAA,SAAS,EAAE;AAJK,OAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,QAAD,kCAAcV,gBAAgB,EAA9B;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA7CD;;AA+CA,eAAeZ,MAAf","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport gql from 'graphql-tag';\nimport { useLazyQuery } from '@apollo/client';\nimport { useCombobox, resetIdCounter } from 'downshift';\nimport debounce from 'lodash.debounce';\n\nimport { SearchStyles, DropDown, DropDownItem } from './styles/DropDown';\n\nconst SEARCH_PRODUCTS_QUERY = gql`\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n    searchTerms: allProducts(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nconst Search = () => {\n  const [\n    findItems,\n    { data, loading, error },\n  ] = useLazyQuery(SEARCH_PRODUCTS_QUERY, { fetchPolicy: 'no-cache' });\n  const items = data?.searchTerms || [];\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const {\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n  } = useCombobox({\n    items: [],\n    onInputValueChange() {\n      console.log('Input Changed!');\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue,\n        },\n      });\n    },\n    onSelectedItemChange() {\n      console.log('Selected Item Changed!');\n    },\n  });\n\n  return (\n    <SearchStyles>\n      <div {...getComboboxProps()}>\n        <input\n          {...getInputProps({\n            type: 'search',\n            placeholder: 'Search for an item',\n            id: 'search',\n            className: 'loading',\n          })}\n        />\n      </div>\n      <DropDown {...getComboboxProps()}>\n        <DropDownItem>HEY</DropDownItem>\n      </DropDown>\n    </SearchStyles>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}