{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/smorash/Develop/Personal/smorefits/frontend/components/SignIn.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport DisplayError from './ErrorMessage';\nimport Form from './styles/Form';\nimport { CURRENT_USER_QUERY } from './User';\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }\n`;\n\nconst SignIn = () => {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: '',\n    password: ''\n  });\n  const [signin, {\n    data,\n    error,\n    loading\n  }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    // refetch currently logged in user\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(inputs);\n    await signin();\n    resetForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Into Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          autoComplete: \"email\",\n          placeholder: \"test@email.com\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/smorash/Develop/Personal/smorefits/frontend/components/SignIn.js"],"names":["useMutation","gql","useForm","DisplayError","Form","CURRENT_USER_QUERY","SIGNIN_MUTATION","SignIn","inputs","handleChange","resetForm","email","password","signin","data","error","loading","variables","refetchQueries","query","handleSubmit","e","preventDefault","console","log","authenticateUserWithPassword"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAEA,MAAMC,eAAe,GAAGL,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;;AAkBA,MAAMM,MAAM,GAAG,MAAM;AACnB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCR,OAAO,CAAC;AAClDS,IAAAA,KAAK,EAAE,EAD2C;AAElDC,IAAAA,QAAQ,EAAE;AAFwC,GAAD,CAAnD;AAIA,QAAM,CAACC,MAAD,EAAS;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAT,IAAqChB,WAAW,CAACM,eAAD,EAAkB;AACtEW,IAAAA,SAAS,EAAET,MAD2D;AAEtE;AACAU,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEd;AAAT,KAAD;AAHsD,GAAlB,CAAtD;;AAMA,QAAMe,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AAEA,UAAMK,MAAM,EAAZ;AACAH,IAAAA,SAAS;AACV,GAND;;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEU,YAA9B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEN,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEW;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,WAAW,EAAC,gBALd;AAME,UAAA,KAAK,EAAEjB,MAAM,CAACG,KANhB;AAOE,UAAA,QAAQ,EAAEF;AAPZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,WAAW,EAAC,UAJd;AAKE,UAAA,KAAK,EAAED,MAAM,CAACI,QALhB;AAME,UAAA,QAAQ,EAAEH;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF,eAuBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAlDD;;AAoDA,eAAeF,MAAf","sourcesContent":["import { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nimport useForm from '../lib/useForm';\nimport DisplayError from './ErrorMessage';\nimport Form from './styles/Form';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }\n`;\n\nconst SignIn = () => {\n  const { inputs, handleChange, resetForm } = useForm({\n    email: '',\n    password: '',\n  });\n  const [signin, { data, error, loading }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    // refetch currently logged in user\n    refetchQueries: [{ query: CURRENT_USER_QUERY }],\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(inputs);\n\n    await signin();\n    resetForm();\n  };\n\n  return (\n    <Form method=\"POST\" onSubmit={handleSubmit}>\n      <h2>Sign Into Your Account</h2>\n      <DisplayError error={data?.authenticateUserWithPassword} />\n      <fieldset>\n        <label htmlFor=\"email\">\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            autoComplete=\"email\"\n            placeholder=\"test@email.com\"\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={inputs.password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Sign In</button>\n      </fieldset>\n    </Form>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}