{"ast":null,"code":"import _defineProperty from \"/Users/smorash/Develop/Personal/smorefits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/smorash/Develop/Personal/smorefits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\n\nvar useForm = function useForm() {\n  _s();\n\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _useState = useState(initial),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var initialValues = Object.values(initial).join('');\n  useEffect(function () {\n    setInputs(initial);\n  }, [initialValues]);\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name,\n        type = _e$target.type;\n\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n\n    if (type === 'file') {\n      var _e$target$files = _slicedToArray(e.target.files, 1);\n\n      value = _e$target$files[0];\n    }\n\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, name, value)));\n  };\n\n  var resetForm = function resetForm() {\n    setInputs(initial);\n  };\n\n  var clearForm = function clearForm() {\n    var blankState = Object.fromEntries(Object.entries(inputs).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return [key, ''];\n    }));\n    setInputs(blankState);\n  };\n\n  return {\n    inputs: inputs,\n    handleChange: handleChange,\n    resetForm: resetForm,\n    clearForm: clearForm\n  };\n};\n\n_s(useForm, \"Ojj4hh6HHOsjtwWnkUaVb5V0o3U=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/smorash/Develop/Personal/smorefits/frontend/lib/useForm.js"],"names":["useState","useEffect","useForm","initial","inputs","setInputs","initialValues","Object","values","join","handleChange","e","target","value","name","type","parseInt","files","resetForm","clearForm","blankState","fromEntries","entries","map","key"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkB;AAAA;;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;;AAAA,kBACJH,QAAQ,CAACG,OAAD,CADJ;AAAA,MACzBC,MADyB;AAAA,MACjBC,SADiB;;AAEhC,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcL,OAAd,EAAuBM,IAAvB,CAA4B,EAA5B,CAAtB;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,SAAS,CAACF,OAAD,CAAT;AACD,GAFQ,EAEN,CAACG,aAAD,CAFM,CAAT;;AAIA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAAA,oBACEA,CAAC,CAACC,MADJ;AAAA,QACpBC,KADoB,aACpBA,KADoB;AAAA,QACbC,IADa,aACbA,IADa;AAAA,QACPC,IADO,aACPA,IADO;;AAG1B,QAAIA,IAAI,KAAK,QAAb,EAAuB;AACrBF,MAAAA,KAAK,GAAGG,QAAQ,CAACH,KAAD,CAAhB;AACD;;AACD,QAAIE,IAAI,KAAK,MAAb,EAAqB;AAAA,2CACTJ,CAAC,CAACC,MAAF,CAASK,KADA;;AAClBJ,MAAAA,KADkB;AAEpB;;AAEDR,IAAAA,SAAS,iCAEJD,MAFI,2BAGNU,IAHM,EAGCD,KAHD,GAAT;AAKD,GAfD;;AAiBA,MAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBb,IAAAA,SAAS,CAACF,OAAD,CAAT;AACD,GAFD;;AAIA,MAAMgB,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAMC,UAAU,GAAGb,MAAM,CAACc,WAAP,CACjBd,MAAM,CAACe,OAAP,CAAelB,MAAf,EAAuBmB,GAAvB,CAA2B;AAAA;AAAA,UAAEC,GAAF;AAAA,UAAOX,KAAP;;AAAA,aAAkB,CAACW,GAAD,EAAM,EAAN,CAAlB;AAAA,KAA3B,CADiB,CAAnB;AAGAnB,IAAAA,SAAS,CAACe,UAAD,CAAT;AACD,GALD;;AAOA,SAAO;AAAEhB,IAAAA,MAAM,EAANA,MAAF;AAAUM,IAAAA,YAAY,EAAZA,YAAV;AAAwBQ,IAAAA,SAAS,EAATA,SAAxB;AAAmCC,IAAAA,SAAS,EAATA;AAAnC,GAAP;AACD,CArCD;;GAAMjB,O;;AAuCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useForm = (initial = {}) => {\n  const [inputs, setInputs] = useState(initial);\n  const initialValues = Object.values(initial).join('');\n\n  useEffect(() => {\n    setInputs(initial);\n  }, [initialValues]);\n\n  const handleChange = (e) => {\n    let { value, name, type } = e.target;\n\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n    if (type === 'file') {\n      [value] = e.target.files;\n    }\n\n    setInputs({\n      // copy existing state\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const resetForm = () => {\n    setInputs(initial);\n  };\n\n  const clearForm = () => {\n    const blankState = Object.fromEntries(\n      Object.entries(inputs).map(([key, value]) => [key, ''])\n    );\n    setInputs(blankState);\n  };\n\n  return { inputs, handleChange, resetForm, clearForm };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}