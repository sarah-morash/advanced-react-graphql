{"ast":null,"code":"import _regeneratorRuntime from \"/Users/smorash/Develop/Personal/smorefits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/smorash/Develop/Personal/smorefits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/smorash/Develop/Personal/smorefits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/smorash/Develop/Personal/smorefits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/smorash/Develop/Personal/smorefits/frontend/components/UpdateProduct.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PRODUCT_MUTATION(\\n    $id: ID!\\n    $name: String\\n    $description: String\\n    $price: Int\\n  ) {\\n    updateProduct(\\n      id: $id\\n      data: { name: $name, description: $description, price: $price }\\n    ) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport DisplayError from './ErrorMessage';\nimport Form from './styles/Form';\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\n\nvar UpdateProduct = function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n  console.log(id);\n\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateData = _useMutation2$.data,\n      updateError = _useMutation2$.error,\n      updateLoading = _useMutation2$.loading;\n\n  var _useForm = useForm(data === null || data === void 0 ? void 0 : data.Product),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  console.log(inputs);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                res = updateProduct({\n                  variables: {\n                    id: id,\n                    name: inputs.name,\n                    description: inputs.description,\n                    price: inputs.price\n                  }\n                })[\"catch\"](function (e) {\n                  console.log(e);\n                }); // TODO: handle submit\n                // submit inputs to backend\n                // const res = await createProduct();\n                // clearForm();\n                // // go to that product's page\n                // Router.push({ pathname: `/product/${res.data.createProduct.id}` });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UpdateProduct, \"+ElilaJyMyeJ07NkHv6NMUicoTQ=\", false, function () {\n  return [useQuery, useMutation, useForm];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/smorash/Develop/Personal/smorefits/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","useForm","DisplayError","Form","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","console","log","variables","data","error","loading","updateProduct","updateData","updateError","updateLoading","Product","inputs","handleChange","clearForm","resetForm","e","preventDefault","res","name","description","price"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nimport useForm from '../lib/useForm';\nimport DisplayError from './ErrorMessage';\nimport Form from './styles/Form';\n\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  ) {\n    updateProduct(\n      id: $id\n      data: { name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nconst UpdateProduct = ({ id }) => {\n  console.log(id);\n\n  const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: { id },\n  });\n\n  const [\n    updateProduct,\n    { data: updateData, error: updateError, loading: updateLoading },\n  ] = useMutation(UPDATE_PRODUCT_MUTATION);\n\n  const { inputs, handleChange, clearForm, resetForm } = useForm(data?.Product);\n  console.log(inputs);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <Form\n      onSubmit={async (e) => {\n        e.preventDefault();\n\n        const res = updateProduct({\n          variables: {\n            id,\n            name: inputs.name,\n            description: inputs.description,\n            price: inputs.price,\n          },\n        }).catch((e) => {\n          console.log(e);\n        });\n\n        // TODO: handle submit\n\n        // submit inputs to backend\n        // const res = await createProduct();\n        // clearForm();\n\n        // // go to that product's page\n        // Router.push({ pathname: `/product/${res.data.createProduct.id}` });\n      }}\n    >\n      <DisplayError error={error || updateError} />\n      <fieldset disabled={updateLoading} aria-busy={updateLoading}>\n        <label htmlFor=\"name\">\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"name\"\n            value={inputs.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"price\">\n          <input\n            type=\"number\"\n            id=\"price\"\n            name=\"price\"\n            placeholder=\"price\"\n            value={inputs.price}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"description\">\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={inputs.description}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Update Product</button>\n      </fieldset>\n    </Form>\n  );\n};\n\nexport default UpdateProduct;\n"]},"metadata":{},"sourceType":"module"}