{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/smorash/Develop/Personal/smorefits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\n\nvar paginationField = function paginationField() {\n  return {\n    keyArgs: false,\n    read: function read() {\n      var existing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var _ref = arguments.length > 1 ? arguments[1] : undefined,\n          args = _ref.args,\n          cache = _ref.cache;\n\n      console.log(existing, args, cache);\n      var skip = args.skip,\n          first = args.first;\n      var data = cache.readQuery({\n        query: gql(_templateObject())\n      });\n    },\n    merge: function merge() {}\n  };\n};\n\nexport default paginationField;","map":{"version":3,"sources":["/Users/smorash/Develop/Personal/smorefits/frontend/lib/paginationField.js"],"names":["gql","paginationField","keyArgs","read","existing","args","cache","console","log","skip","first","data","readQuery","query","merge"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAC7BC,IAAAA,OAAO,EAAE,KADoB;AAE7BC,IAAAA,IAAI,EAAE,gBAAoC;AAAA,UAAnCC,QAAmC,uEAAxB,EAAwB;;AAAA;AAAA,UAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,UAAZC,KAAY,QAAZA,KAAY;;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsBC,IAAtB,EAA4BC,KAA5B;AADwC,UAEhCG,IAFgC,GAEhBJ,IAFgB,CAEhCI,IAFgC;AAAA,UAE1BC,KAF0B,GAEhBL,IAFgB,CAE1BK,KAF0B;AAIxC,UAAMC,IAAI,GAAGL,KAAK,CAACM,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEb,GAAF;AAAP,OAAhB,CAAb;AACD,KAP4B;AAQ7Bc,IAAAA,KAAK,EAAE,iBAAM,CAAE;AARc,GAAP;AAAA,CAAxB;;AAWA,eAAeb,eAAf","sourcesContent":["import gql from 'graphql-tag';\n\nconst paginationField = () => ({\n  keyArgs: false,\n  read: (existing = [], { args, cache }) => {\n    console.log(existing, args, cache);\n    const { skip, first } = args;\n\n    const data = cache.readQuery({ query: gql`` });\n  },\n  merge: () => {},\n});\n\nexport default paginationField;\n"]},"metadata":{},"sourceType":"module"}