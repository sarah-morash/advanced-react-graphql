{"ast":null,"code":"import { PAGINATION_QUERY } from '../components/Pagination';\n\nvar paginationField = function paginationField() {\n  return {\n    keyArgs: false,\n    read: function read() {\n      var _data$_allProductsMet;\n\n      var existing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var _ref = arguments.length > 1 ? arguments[1] : undefined,\n          args = _ref.args,\n          cache = _ref.cache;\n\n      console.log(existing, args, cache);\n      var skip = args.skip,\n          first = args.first;\n      var data = cache.readQuery({\n        query: PAGINATION_QUERY\n      });\n      var count = (_data$_allProductsMet = data._allProductsMeta) === null || _data$_allProductsMet === void 0 ? void 0 : _data$_allProductsMet.count;\n      var page = skip / first + 1;\n      var pages = Math.ceil(count / first);\n    },\n    merge: function merge() {}\n  };\n};\n\nexport default paginationField;","map":{"version":3,"sources":["/Users/smorash/Develop/Personal/smorefits/frontend/lib/paginationField.js"],"names":["PAGINATION_QUERY","paginationField","keyArgs","read","existing","args","cache","console","log","skip","first","data","readQuery","query","count","_allProductsMeta","page","pages","Math","ceil","merge"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,0BAAjC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAC7BC,IAAAA,OAAO,EAAE,KADoB;AAE7BC,IAAAA,IAAI,EAAE,gBAAoC;AAAA;;AAAA,UAAnCC,QAAmC,uEAAxB,EAAwB;;AAAA;AAAA,UAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,UAAZC,KAAY,QAAZA,KAAY;;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsBC,IAAtB,EAA4BC,KAA5B;AADwC,UAEhCG,IAFgC,GAEhBJ,IAFgB,CAEhCI,IAFgC;AAAA,UAE1BC,KAF0B,GAEhBL,IAFgB,CAE1BK,KAF0B;AAIxC,UAAMC,IAAI,GAAGL,KAAK,CAACM,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEb;AAAT,OAAhB,CAAb;AACA,UAAMc,KAAK,4BAAGH,IAAI,CAACI,gBAAR,0DAAG,sBAAuBD,KAArC;AACA,UAAME,IAAI,GAAGP,IAAI,GAAGC,KAAP,GAAe,CAA5B;AACA,UAAMO,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGJ,KAAlB,CAAd;AACD,KAV4B;AAW7BU,IAAAA,KAAK,EAAE,iBAAM,CAAE;AAXc,GAAP;AAAA,CAAxB;;AAcA,eAAenB,eAAf","sourcesContent":["import { PAGINATION_QUERY } from '../components/Pagination';\n\nconst paginationField = () => ({\n  keyArgs: false,\n  read: (existing = [], { args, cache }) => {\n    console.log(existing, args, cache);\n    const { skip, first } = args;\n\n    const data = cache.readQuery({ query: PAGINATION_QUERY });\n    const count = data._allProductsMeta?.count;\n    const page = skip / first + 1;\n    const pages = Math.ceil(count / first);\n  },\n  merge: () => {},\n});\n\nexport default paginationField;\n"]},"metadata":{},"sourceType":"module"}